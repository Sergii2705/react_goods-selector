{"version":3,"sources":["App.tsx","goods.js","index.tsx"],"names":["goods","map","good","id","uuidv4","name","App","state","selected","selectGood","setState","prevState","removeSelect","filter","el","this","title","length","slice","join","at","className","type","onClick","isSelected","includes","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAOMA,ECPS,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UDH4BC,KAAI,SAAAC,GAAI,MAAK,CACzCC,GAAIC,cACJC,KAAMH,MAOKI,EAAb,4MACEC,MAAyB,CACvBC,SAAU,CAAC,MAAO,QAAS,WAF/B,EAKEC,WAAa,SAACP,GACZ,EAAKQ,UAAS,SAAAC,GAAS,MAAK,CAAEH,SAAS,GAAD,mBAAMG,EAAUH,UAAhB,CAA0BN,SANpE,EASEU,aAAe,SAACV,GACd,EAAKQ,UAAS,SAAAC,GAAS,MACrB,CAAEH,SAAUG,EAAUH,SAASK,QAAO,SAAAC,GAAE,OAAIA,IAAOZ,UAXzD,4CAcE,WAAU,IAAD,OACCM,EAAaO,KAAKR,MAAlBC,SACFQ,EAAQR,EAASS,OACnB,UAAIT,EAASS,OAAS,EAAlB,UACCT,EAASU,MAAM,GAAI,GAAGC,KAAK,MAD5B,gBACyCX,EAASY,IAAI,GADtD,kBAECZ,EAAS,GAFV,QAGF,YACF,oBAEJ,OACE,uBAAMa,UAAU,oBAAhB,UACE,yBAAQA,UAAU,4BAAlB,UACE,oBAAIA,UAAU,aAAd,SACGL,IAGFR,EAASS,OAEN,wBACEK,KAAK,SACLD,UAAU,8BACVE,QAAS,kBAAM,EAAKb,SAAS,CAAEF,SAAU,MAH3C,mBAQA,MAGN,oBAAIa,UAAU,0CAAd,SACGrB,EAAMC,KAAI,YAAmB,IAAhBE,EAAe,EAAfA,GAAIE,EAAW,EAAXA,KACVmB,EAAahB,EAASiB,SAASpB,GAErC,OACE,qBAEEgB,UAAWK,IACT,OACA,CAAE,eAAgBF,IAJtB,UAOGnB,EAEAmB,EAEG,wBACEF,KAAK,SACLD,UAAU,4CACVE,QAAS,kBAAM,EAAKX,aAAaP,IAHnC,oBASA,wBACEiB,KAAK,SACLD,UAAU,2CACVE,QAAS,kBAAM,EAAKd,WAAWJ,IAHjC,sBAnBCF,eAjDrB,GAAyBwB,aEbzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d17026fd.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\nconst goods = goodsFromServer.map(good => ({\n  id: uuidv4(),\n  name: good,\n}));\n\ntype State = {\n  selected: string[];\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    selected: ['Jam', 'Apple', 'Garlic'],\n  };\n\n  selectGood = (good:string) => {\n    this.setState(prevState => ({ selected: [...prevState.selected, good] }));\n  };\n\n  removeSelect = (good:string) => {\n    this.setState(prevState => (\n      { selected: prevState.selected.filter(el => el !== good) }));\n  };\n\n  render() {\n    const { selected } = this.state;\n    const title = selected.length\n      ? (`${selected.length > 1\n        ? `${selected.slice(0, -1).join(', ')} and ${selected.at(-1)} are`\n        : `${selected[0]} is`}`)\n        + ' selected'\n      : 'No goods selected';\n\n    return (\n      <main className=\"App panel is-info\">\n        <header className=\"App__header panel-heading\">\n          <h1 className=\"App__title\">\n            {title}\n          </h1>\n\n          {selected.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"App__clear button is-danger\"\n                onClick={() => this.setState({ selected: [] })}\n              >\n                Clear\n              </button>\n            )\n            : ''}\n        </header>\n\n        <ul className=\"has-background-info-light has-text-dark\">\n          {goods.map(({ id, name }) => {\n            const isSelected = selected.includes(name);\n\n            return (\n              <li\n                key={id}\n                className={classNames(\n                  'Good',\n                  { 'Good--active': isSelected },\n                )}\n              >\n                {name}\n\n                {isSelected\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"Good__remove button is-danger is-outlined\"\n                      onClick={() => this.removeSelect(name)}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"Good__select button is-info is-outlined \"\n                      onClick={() => this.selectGood(name)}\n                    >\n                      Select\n                    </button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </main>\n    );\n  }\n}\n","export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}